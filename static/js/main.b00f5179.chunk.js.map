{"version":3,"sources":["logo.svg","ie-logo.png","joe.jpg","pin.png","insta.png","phone.png","linkedin.png","About.js","Contact.js","ContactBar.js","Services.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","src","joe","alt","Contact","href","ContactBar","linkedin","phone","insta","pin","Services","NavBar","setComponent","currentComponent","onClick","App","useState","setCurrentComponent","ieLogo","type","data","logo","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,yNCgD5BC,EA5CD,WACZ,OACE,6BACE,yBAAKC,UAAU,WACb,uDAAiC,IACjC,yBAAKA,UAAU,MAAMC,IAAKC,IAAKC,IAAI,YAErC,mOAG6D,IAC3D,sEAJF,IAIiD,6BAAO,KAExD,4BACA,+DACA,yBAAKH,UAAU,aACb,6BACE,qDACA,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,aACA,yBAAKA,UAAU,WAAf,UACA,yBAAKA,UAAU,WAAf,YACA,yBAAKA,UAAU,WAAf,OACA,yBAAKA,UAAU,WAAf,WAEF,6BACE,mDACA,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,WAAf,aAEF,6BACE,gDAEA,yBAAKA,UAAU,WAAf,mBACA,yBAAKA,UAAU,WAAf,mBACA,yBAAKA,UAAU,WAAf,eAGJ,8BC/BSI,EAVC,WACZ,OAAQ,6BACJ,mEACA,qCACA,uBAAGJ,UAAU,OAAOK,KAAK,kCAAzB,4BACA,qCACA,uBAAGL,UAAU,OAAOK,KAAK,oBAAzB,kB,yECeOC,EAfI,WAEf,OACI,yBAAKN,UAAU,cAEX,uBAAGK,KAAK,2DAA0D,yBAAKL,UAAU,OAAOC,IAAKM,IAAUJ,IAAI,mBAC3G,uBAAGE,KAAK,oBAAmB,yBAAKL,UAAU,OAAOC,IAAKO,IAAOL,IAAI,2BACjE,uBAAGE,KAAK,4CAA2C,yBAAKL,UAAU,OAAOC,IAAKQ,IAAON,IAAI,oBACzF,uBAAGE,KAAK,4CAA2C,yBAAKL,UAAU,OAAOC,IAAKS,IAAKP,IAAI,sBCVpFQ,EAHE,WACb,OAAQ,6BAAK,uDCKjB,SAASC,EAAT,GAAqD,IAAnCC,EAAkC,EAAlCA,aAAkC,EAApBC,iBAC9B,OACE,4BAAQd,UAAU,cAChB,yBAAKA,UAAU,UACb,uBACEA,UAAW,UACXK,KAAK,SACLU,QAAS,kBAAMF,EAAad,KAH9B,SAOA,uBACEC,UAAS,UACTK,KAAK,YACLU,QAAS,kBAAMF,EAAaF,KAH9B,YAOA,uBACEX,UAAS,UACTK,KAAK,WACLU,QAAS,kBAAMF,EAAaT,KAH9B,aAgDOY,MApCf,WAAgB,IAAD,EACmCC,mBAASlB,GAD5C,mBACNe,EADM,KACYI,EADZ,KAEb,OACE,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,WACb,yBAAKC,IAAKkB,IAAQhB,IAAI,UAGxB,4BACEH,UAAU,WACVoB,KAAK,gBACLC,KAAMC,IACNC,aAAW,0BAGb,yBAAKvB,UAAU,oBACb,uBAAGK,KAAK,kCAAkCL,UAAU,SAApD,gBAKJ,yBAAKA,UAAU,eACb,kBAACY,EAAD,CACEC,aAAcK,EACdJ,iBAAkBA,IAEnBA,EACD,kBAAC,EAAD,UCxDUU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b00f5179.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.24d2d1e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ie-logo.19d60571.png\";","module.exports = __webpack_public_path__ + \"static/media/joe.687ae324.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pin.c962f761.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.64d390dc.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.f2667b6e.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.c68a5248.png\";","import React from \"react\";\nimport joe from \"./joe.jpg\";\nimport \"./App.css\";\n\nconst About = () => {\n  return (\n    <div>\n      <div className=\"Caption\">\n        <h1>Hi. I'm Joe Combopiano.</h1>{\" \"}\n        <img className=\"Joe\" src={joe} alt=\"Family\" />\n      </div>\n      <p>\n        With over 10 years of industry experience as a software engineer,\n        product manager, solutions engineer, and consultant. Plus, having worked\n        at top companies such as Facebook, Stripe, and Microsoft -{\" \"}\n        <u>I'm here to help your business succeed.</u> <br />{\" \"}\n      </p>\n      <p></p>\n      <h2>Some companies I've worked with</h2>\n      <div className=\"Companies\">\n        <div>\n          <h3>Facebook Integrations</h3>\n          <div className=\"Company\">Albertsons</div>\n          <div className=\"Company\">Nordstrom</div>\n          <div className=\"Company\">Macy's</div>\n          <div className=\"Company\">LiveRamp</div>\n          <div className=\"Company\">IRI</div>\n          <div className=\"Company\">Square</div>\n        </div>\n        <div>\n          <h3>App Dev & Analytics</h3>\n          <div className=\"Company\">Home Depot</div>\n          <div className=\"Company\">Oportun</div>\n          <div className=\"Company\">XL Group</div>\n        </div>\n        <div>\n          <h3>CRM Integrations</h3>\n\n          <div className=\"Company\">Harley-Davidson</div>\n          <div className=\"Company\">JP Morgan Chase</div>\n          <div className=\"Company\">Microsoft</div>\n        </div>\n      </div>\n      <p></p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Contact = ()=> {\n    return (<div>\n        <h1>Here's how to get in touch with me.</h1>\n        <h3>Email</h3>\n        <a className=\"Link\" href=\"mailto:joe.combopiano@gmai.com\">joe.combopiano@gmail.com</a>\n        <h3>Phone</h3>\n        <a className=\"Link\" href=\"tel:814-881-1020\">814-881-1020</a>\n    </div>);\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport './Icons.css';\nimport pin from './pin.png';\nimport insta from './insta.png';\nimport phone from './phone.png';\nimport linkedin from './linkedin.png';\n\nconst ContactBar = ()=> {\n    \n    return (\n        <div className=\"ContactBar\">\n           \n            <a href=\"https://www.linkedin.com/in/joseph-combopiano-09b9ab1a/\"><img className=\"Icon\" src={linkedin} alt=\"linkedin link\" /></a>\n            <a href=\"tel:814-881-1020\"><img className=\"Icon\" src={phone} alt=\"phone number tel link\" /></a>\n            <a href=\"https://www.instagram.com/joecombopiano/\"><img className=\"Icon\" src={insta} alt=\"instagram link\" /></a>\n            <a href=\"https://www.pinterest.com/joecombopiano/\"><img className=\"Icon\" src={pin} alt=\"pinterest link\"/></a>\n            \n\n        </div>\n    )\n};\n\nexport default ContactBar;","import React from 'react';\nimport './App.css';\n\nconst Services = () => {\n    return (<div><h1>What can I help with?</h1></div>)\n};\nexport default Services;","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport ieLogo from \"./ie-logo.png\";\nimport \"./App.css\";\nimport About from \"./About\";\nimport Contact from \"./Contact\";\nimport ContactBar from \"./ContactBar\";\nimport Services from \"./Services\";\n\nfunction NavBar({ setComponent, currentComponent }) {\n  return (\n    <header className=\"App-header\">\n      <div className=\"NavBar\">\n        <a\n          className={\"NavLink\"}\n          href=\"#about\"\n          onClick={() => setComponent(About)}\n        >\n          about\n        </a>\n        <a\n          className={`NavLink`}\n          href=\"#services\"\n          onClick={() => setComponent(Services)}\n        >\n          services\n        </a>\n        <a\n          className={`NavLink`}\n          href=\"#contact\"\n          onClick={() => setComponent(Contact)}\n        >\n          contact\n        </a>\n      </div>\n    </header>\n  );\n}\n\nfunction App() {\n  const [currentComponent, setCurrentComponent] = useState(About);\n  return (\n    <div className=\"App\">\n      <div className=\"BodySplit\">\n        <div className=\"LogoArea\">\n          <div className=\"IE-logo\">\n            <img src={ieLogo} alt=\"logo\"/>\n          </div>\n          \n          <object\n            className=\"Logo-svg\"\n            type=\"image/svg+xml\"\n            data={logo}\n            aria-label=\"combo consulting logo\"\n          ></object>\n         \n          <div className=\"bottom-container\">\n            <a href=\"mailto:joe.combopiano@gmail.com\" className=\"email\">\n              Contact me\n            </a>\n          </div>\n        </div>\n        <div className=\"ContentArea\">\n          <NavBar\n            setComponent={setCurrentComponent}\n            currentComponent={currentComponent}\n          />\n          {currentComponent}\n          <ContactBar />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}