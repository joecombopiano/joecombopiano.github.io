{"version":3,"sources":["logo.svg","joe.jpg","pin.png","insta.png","phone.png","linkedin.png","About.js","Contact.js","ContactBar.js","Services.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","src","joe","Contact","href","ContactBar","linkedin","phone","insta","pin","Services","NavBar","setComponent","currentComponent","onClick","App","useState","setCurrentComponent","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,yMCgD5BC,EA5CD,WAEV,OACI,6BACI,yBAAKC,UAAU,WAAU,uDAAzB,IAA0D,yBAAKA,UAAU,MAAMC,IAAKC,OACpF,oOAC0M,sEAD1M,IACyP,6BADzP,MAEA,4BACA,+DACA,yBAAKF,UAAU,aACX,6BACI,qDAEI,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,aACA,yBAAKA,UAAU,WAAf,UACA,yBAAKA,UAAU,WAAf,YACA,yBAAKA,UAAU,WAAf,OACA,yBAAKA,UAAU,WAAf,WAER,6BACI,mDACA,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,WAAf,aAEJ,6BACI,gDAEA,yBAAKA,UAAU,WAAf,mBACA,yBAAKA,UAAU,WAAf,mBACA,yBAAKA,UAAU,WAAf,gBAMR,8BC7BGG,EAVC,WACZ,OAAQ,6BACJ,mEACA,qCACA,uBAAGH,UAAU,OAAOI,KAAK,kCAAzB,4BACA,qCACA,uBAAGJ,UAAU,OAAOI,KAAK,oBAAzB,kB,wECKR,IAeeC,EAfI,WAEf,OACI,yBAAKL,UAAU,cAEX,uBAAGI,KAAK,2DAA0D,yBAAKJ,UAAU,OAAOC,IAAKK,OAC7F,uBAAGF,KAAK,oBAAmB,yBAAKJ,UAAU,OAAOC,IAAKM,OACtD,uBAAGH,KAAK,4CAA2C,yBAAKJ,UAAU,OAAOC,IAAKO,OAC9E,uBAAGJ,KAAK,4CAA2C,yBAAKJ,UAAU,OAAOC,IAAKQ,SCd3EC,EAHE,WACb,OAAQ,6BAAK,uDCGjB,SAASC,EAAT,GAAkD,IAAjCC,EAAgC,EAAhCA,aAAgC,EAAlBC,iBAC7B,OACA,4BAAQb,UAAU,cAChB,yBAAKA,UAAU,UACb,uBAAGA,UAAW,UAAWI,KAAK,IAAIU,QAAS,kBAAIF,EAAab,KAA5D,SACA,uBAAGC,UAAS,UAAaI,KAAK,IAAIU,QAAS,kBAAIF,EAAaF,KAA5D,YACA,uBAAGV,UAAS,UAAaI,KAAK,IAAIU,QAAS,kBAAIF,EAAaT,KAA5D,gBA0BSY,MArBf,WAAgB,IAAD,EACmCC,mBAASjB,GAD5C,mBACNc,EADM,KACYI,EADZ,KAEb,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAY,aACf,yBAAKA,UAAU,YACX,yBAAKC,IAAKiB,MACd,yBAAKlB,UAAU,oBACb,uBAAGI,KAAK,kCAAkCJ,UAAU,SAApD,gBAGF,yBAAKA,UAAU,eACb,kBAACW,EAAD,CAAQC,aAAcK,EAAqBJ,iBAAkBA,IAC5DA,EACD,kBAAC,EAAD,UCrBUM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba708b03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e7c7c5de.svg\";","module.exports = __webpack_public_path__ + \"static/media/joe.687ae324.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pin.c962f761.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.64d390dc.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.f2667b6e.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.c68a5248.png\";","import React from 'react';\nimport joe from './joe.jpg';\nimport './App.css';\n\nconst About = ()=> {\n    \n    return (\n        <div>\n            <div className=\"Caption\"><h1>Hi. I'm Joe Combopiano.</h1> <img className=\"Joe\" src={joe}/></div>\n            <p>\n                With over 10 years of industry experience as a software engineer, product manager, solutions engineer, and consultant. Plus, having worked at top companies such as Facebook, Stripe, and Microsoft - <u>I'm here to help your business succeed.</u> <br/>  </p>\n            <p></p>\n            <h2>Some companies I've worked with</h2>\n            <div className=\"Companies\">\n                <div>\n                    <h3>\n                    Facebook Integrations</h3>\n                        <div className=\"Company\">Albertsons</div>\n                        <div className=\"Company\">Nordstrom</div>\n                        <div className=\"Company\">Macy's</div>\n                        <div className=\"Company\">LiveRamp</div>\n                        <div className=\"Company\">IRI</div>\n                        <div className=\"Company\">Square</div>\n                </div>\n                <div>\n                    <h3>App Dev & Analytics</h3>\n                    <div className=\"Company\">Home Depot</div>\n                    <div className=\"Company\">Oportun</div>\n                    <div className=\"Company\">XL Group</div>\n                </div>\n                <div>\n                    <h3>CRM Integrations</h3> \n                   \n                    <div className=\"Company\">Harley-Davidson</div>\n                    <div className=\"Company\">JP Morgan Chase</div>\n                    <div className=\"Company\">Microrsoft</div>\n\n                </div>\n             \n               \n            </div>\n            <p>\n\n            </p>\n        </div>\n    )\n};\n\nexport default About;","import React from 'react';\n\nconst Contact = ()=> {\n    return (<div>\n        <h1>Here's how to get in touch with me.</h1>\n        <h3>Email</h3>\n        <a className=\"Link\" href=\"mailto:joe.combopiano@gmai.com\">joe.combopiano@gmail.com</a>\n        <h3>Phone</h3>\n        <a className=\"Link\" href=\"tel:814-881-1020\">814-881-1020</a>\n    </div>);\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport './Icons.css';\nimport pin from './pin.png';\nimport insta from './insta.png';\nimport phone from './phone.png';\nimport linkedin from './linkedin.png';\n\nfunction importAll(r) {\n    return r.keys().map(r);\n  }\n  \n \nconst ContactBar = ()=> {\n    \n    return (\n        <div className=\"ContactBar\">\n           \n            <a href=\"https://www.linkedin.com/in/joseph-combopiano-09b9ab1a/\"><img className=\"Icon\" src={linkedin} /></a>\n            <a href=\"tel:814-881-1020\"><img className=\"Icon\" src={phone} /></a>\n            <a href=\"https://www.instagram.com/joecombopiano/\"><img className=\"Icon\" src={insta} /></a>\n            <a href=\"https://www.pinterest.com/joecombopiano/\"><img className=\"Icon\" src={pin} /></a>\n            \n\n        </div>\n    )\n};\n\nexport default ContactBar;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Services = () => {\n    return (<div><h1>What can I help with?</h1></div>)\n};\nexport default Services;","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport About from './About';\nimport Contact from './Contact';\nimport ContactBar from './ContactBar';\nimport Services from './Services';\n\nfunction NavBar({setComponent, currentComponent}){\n  return (\n  <header className=\"App-header\">\n    <div className=\"NavBar\">\n      <a className={\"NavLink\"} href=\"#\" onClick={()=>setComponent(About)}>about</a>\n      <a className={`NavLink`} href=\"#\" onClick={()=>setComponent(Services)}>services</a>\n      <a className={`NavLink`} href=\"#\" onClick={()=>setComponent(Contact)}>contact me</a>\n    </div>\n  </header>);\n}\n\nfunction App() {\n  const [currentComponent, setCurrentComponent] = useState(About); \n  return (\n    <div className=\"App\">\n      <div className = \"BodySplit\">\n        <div className=\"LogoArea\">\n            <img src={logo}/>\n        <div className=\"bottom-container\">\n          <a href=\"mailto:joe.combopiano@gmail.com\" className='email'>Contact me</a>\n        </div>\n        </div>\n        <div className=\"ContentArea\">\n          <NavBar setComponent={setCurrentComponent} currentComponent={currentComponent}/>\n          {currentComponent}\n          <ContactBar/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}